[user]
	email = akawolf0@gmail.com
	name = Artjom Vejsel
	signingkey = 159E508B1B40DF152320FC7D80D5EC717C13860B

[push]
	# always push current branch if doesn't set
	default = current
	# use default remote for new branches
	autoSetupRemote = true

[core]
	editor = env INSIDE_GIT=1 emacs-client

[alias]
	# basic
	st = status -s
	cl = clone
	ci = commit
	co = checkout
	br = branch
	r = reset
	cp = cherry-pick
	gr = grep -Ii

	# tweak defaults
	diff = diff --word-diff
	branch = branch -ra
	grep = grep -Ii
	bra = branch -ra
	ai = add --interactive

	# grep on filename
	f = "!git ls-files | grep -i"

	# commit
	cm = commit -m
	cma = commit -a -m
	ca = commit --amend
	amend = commit --amend
	caa = commit -a --amend -C HEAD

	# log commands
	ls = log --pretty=format:"%C(green)%h\\ %C(yellow)[%ad]%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	lg = "!git lg1"
	lc  = "!f() { git ll "$1"^.."$1"; }; f"
	lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
	fl = log -u
	filelog = log -u

	# diff
	d = diff
	dc = diff --cached

	# diff last commit
	dlc = diff --cached HEAD^
	dr  = "!f() { git diff -w "$1"^.."$1"; }; f"
	diffr  = "!f() { git diff "$1"^.."$1"; }; f"

	# reset commands
	r1 = reset HEAD^
	r2 = reset HEAD^^
	rh = reset --hard
	rh1 = reset HEAD^ --hard
	rh2 = reset HEAD^^ --hard

	# git svn
	svnr = svn rebase
	svnd = svn dcommit
	svnl = svn log --oneline --show-commit

	# stash
	sl = stash list
	sa = stash apply
	ss = stash save

	# assume aliases
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged

	# show assumed files
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"

	# unassume all the assumed files
	unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
	assumeall = "!git status -s | awk {'print $2'} | xargs git assume"

	# subtree
	# add
	sba = "!f() { git subtree add --prefix $2 $1 master --squash; }; f"
	# update/pull
	sbu = "!f() { git subtree pull --prefix $2 $1 master --squash; }; f"

	# various useful
	# last tag created
	lasttag = describe --tags --abbrev=0
	lt = describe --tags --abbrev=0

	# conflict/merges
	ours = "!f() { git co --ours $@ && git add $@; }; f"
	theirs = "!f() { git co --theirs $@ && git add $@; }; f"

	#list remotes
	rem="!git config -l | grep remote.*url | tail -n +2"

	#apply patch from other local repo
	lap = "!f() { git --git-dir=$1 format-patch -k -1 --stdout $2 | git am -3 -k; }; f"

	#open markdown files edited in last commit
	last = "!gvim $(git show HEAD --format="" --name-only | grep -e .*md$ | xargs)"

	#open just created markdown in working directory
	newmd = "!gvim $(git status -s | awk {'print $2'})"

	# initial empty commit
	empty = "!git commit -am\"[empty] Initial commit\" --allow-empty"

	# list all aliases
	la = "!git config -l | grep alias | cut -c 7-"

	# convoluted aliases
	# grep from root folder
	gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

	#rename branch tree to done-
	done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"

	#add bitbucket remote
	ra = "!f() { git remote add $1 https://bitbucket.org/$2.git; }; f"

	# worktree list
	wl = worktree list

	# undo from here http://megakemp.com/2016/08/25/git-undo/
	undo = "!f() { git reset --hard $(git rev-parse --abbrev-ref HEAD)@{${1-1}}; }; f"

	# gc from here: https://stackoverflow.com/a/14728706
	gc-all = "!f() { git -c gc.reflogExpire=0 -c gc.reflogExpireUnreachable=0 -c gc.rerereresolved=0 -c gc.rerereunresolved=0 -c gc.pruneExpire=now gc; }; f"

[sendemail]
	smtpEncryption = tls
	smtpServer = smtp.gmail.com
	smtpUser = akawolf0@gmail.com
	smtpServerPort = 587

# linux kernel configuration
[sendemail.linux]
	tocmd ="`pwd`/scripts/get_maintainer.pl --nogit --nogit-fallback --norolestats --nol"
	cccmd ="`pwd`/scripts/get_maintainer.pl --nogit --nogit-fallback --norolestats --nom"

[color "diff"]
	#commit
	#frag
	#func
	#meta
	new = green bold
	old = red bold
	meta = 11
	frag = magenta bold
	func = 146 bold
	commit = yellow bold
	whitespace = red reverse
	#plain
	#whitespace

# nicely highlight from https://github.com/git/git/tree/master/contrib/diff-highlight
#[pager]
#	log = diff-highlight | less
#	show = diff-highlight | less
#	diff = diff-highlight | less
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22

# git-lfs extension from https://git-lfs.github.com/
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[credential]
	# store credentials
	helper = store

[pull]
	# only allow fastforward for pull
	ff = only

[init]
	# use master as default for git init
	defaultBranch = master

# difftastic configuration
[diff]
	tool = difftastic
[difftool]
	prompt = false
[difftool "difftastic"]
	cmd = difft "$LOCAL" "$REMOTE"
[pager]
	difftool = true
[alias]
	dft = difftool

# delta configuration
[core]
	pager = delta
[interactive]
	diffFilter = delta --color-only --features=interactive
[delta]
	features = diff-highlight
	true-color = always
[delta "interactive"]
	keep-plus-minus-markers = false
[delta "decorations"]
	commit-decoration-style = blue ol
	commit-style = raw
	file-style = omit
	hunk-header-decoration-style = blue box
	hunk-header-file-style = red
	hunk-header-line-number-style = "#067a00"
	hunk-header-style = file line-number syntax
